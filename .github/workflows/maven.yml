# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. 设置JDK环境 (关键修改：改为21，与你的pom.xml匹配)
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21' # ！！！重要：从17改为21，与你的环境一致
        distribution: 'temurin'
        cache: maven # 缓存依赖，极大加速构建

    # 3. 构建与测试（修改了命令，更完整）
    - name: Build and test with Maven
      run: mvn clean verify --file pom.xml
      # 将 -B package 改为 clean verify
      # clean: 先清理旧构建，确保全新环境
      # verify: 比package更严格，会运行所有集成测试（如果你有的话）

    # 4. 【可选但推荐】上传构建产物（JAR包）
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: vCampus-package
        path: target/*.jar # 上传target目录下所有的JAR文件

    # 5. 【可选】上传测试报告（用于诊断失败的测试）
    - name: Upload test reports
      if: ${{ always() }} # 无论构建成功失败都上传报告
      uses: actions/upload-artifact@v4
      with:
        name: surefire-reports
        path: target/surefire-reports/ # 单元测试报告路径

    # 6. 【可选】依赖提交（安全扫描用，可保留）
    - name: Update dependency graph
	# 添加if条件：仅在推送到main分支时运行，避开PR场景
	  if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
